# Uninstrumented deployment for kubernetes
# Before deploying it, run "make build-all push-all"
# as it requires to manually load the images to the local K8s cluster (e.g. kind load-image)
apiVersion: v1
kind: Namespace
metadata:
  name: demo
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: depl-frontend
  namespace: demo
spec:
  selector:
    matchLabels:
      app: frontend
#  replicas: 1
  template:
    metadata:
      labels:
        app: frontend
        grafana.com/instrument-port: "8080"
    spec:
      containers:
        - name: frontend
          image: mariomac/ds-example:frontend
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: BACKEND
              value: http://backend:8080
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: demo
spec:
  selector:
    app: frontend
  ports:
    - port: 8080
      protocol: TCP
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: depl-backend
  namespace: demo
spec:
  selector:
    matchLabels:
      app: backend
  replicas: 1
  template:
    metadata:
      labels:
        app: backend
        grafana.com/instrument-port: "8080"
    spec:
      containers:
        - name: frontend
          image: mariomac/ds-example:backend
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
          env:
            - name: WORKERS
              value: "worker:5000"
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: demo
spec:
  selector:
    app: backend
  ports:
    - port: 8080
      protocol: TCP
      targetPort: http
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: depl-worker
  namespace: demo
spec:
  selector:
    matchLabels:
      app: worker
  replicas: 3
  template:
    metadata:
      labels:
        app: worker
        grafana.com/instrument-port: "5000"
    spec:
      containers:
        - name: frontend
          image: mariomac/ds-example:worker
          ports:
            - containerPort: 5000
              name: grpc
---
apiVersion: v1
kind: Service
metadata:
  name: worker
  namespace: demo
spec:
  selector:
    app: worker
  ports:
    - port: 5000
      targetPort: grpc
---
apiVersion: v1
kind: Pod
metadata:
  name: pod-loadgen
  namespace: demo
spec:
  containers:
    - name: loadgen
      image: mariomac/ds-example:loadgen
      env:
        - name: "WAIT_TIME"
          value: "1s"
        - name: "FRONTEND"
          value: "http://frontend:8080"
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: java-http-service
  namespace: demo
spec:
  selector:
    matchLabels:
      app: java-http-service
  template:
    metadata:
      labels:
        app: java-http-service
    spec:
      containers:
        - name: java-http-service
          image: jetty:9.4-jre8
          ports:
            - containerPort: 8080
              name: http
              protocol: TCP
---
apiVersion: v1
kind: Service
metadata:
  name: java-http-service
  namespace: demo
spec:
  selector:
    app: java-http-service
  ports:
    - port: 8080
      protocol: TCP
      targetPort: http